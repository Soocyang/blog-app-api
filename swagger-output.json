{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog API",
    "description": "This is a REST API application made with Express. It retrieves blog posts related data",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/",
      "description": "local server"
    },
    {
      "url": "http://localhost:4000/",
      "description": "the other server"
    }
  ],
  "tags": [
    {
      "name": "posts",
      "description": ""
    },
    {
      "name": "tags",
      "description": ""
    }
  ],
  "paths": {
    "/posts/": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Retrieve a list of posts",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "Create a post",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Retrieve a post details by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "string"
            },
            "description": "Unique ID of the post to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "posts"
        ],
        "summary": "Create a post",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "string"
            },
            "description": "Unique ID of the post to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "posts"
        ],
        "summary": "Delete a post by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "string"
            },
            "description": "Unique ID of the post to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tags/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/test/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "x-forwarded-for",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Post": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "How to Typescript"
          },
          "meta_title": {
            "type": "string",
            "example": "Typescript"
          },
          "content": {
            "type": "string",
            "example": "Lorem ipsum x1000"
          },
          "summary": {
            "type": "string",
            "example": "Lorem ipsum"
          },
          "url_key": {
            "type": "string",
            "example": "how_to_typescript"
          },
          "is_published": {
            "type": "boolean",
            "example": false
          }
        }
      }
    }
  }
}